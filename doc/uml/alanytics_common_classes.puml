@startuml

'left to right direction

title: Классы анализа

class Session <<Service>> #LightYellow{
    user: string
    state: State
    history: List<State>
}

package cmdComparators{
    class Regression<<Service>> #LightYellow{
    }
    class LaxComparator<<Service>> #LightYellow{
    }
    class Synonyms<<Domain>> #LightPink{
        values: List<string>
        keyword_sets: List< Tuple<string> >
        vector: CommandVector
    }
}

package StateMachine{
    class State<<Domain>> #LightPink{
        id: int
        text: string
        cmdList: List<CommandVector>
    }

    class CommandVector<<Domain>> #LightPink{
        name: string
        nextState: State
        text: string
        button: string
        synonyms: Synonyms
    }
}

package mutability{
    class UserVar<<Domain>> #LightPink{
        id: int
        flowPart: Actions
        rule: Rule
    }

    class Rule<<Domain>> #LightPink{
    }

    class Actions<<Domain>> #LightPink{
    }
}

package "Data transfer objects (DTO)" as dto{
    class Request <<Service>> #LightYellow{
        command: string
    }

    class Response <<Service>> #LightYellow{
        text: string
        pron: string
        image
    }
}

package BuisnessLogic{
    class Handler<<Service>> #LightYellow{
        executor: UseCase
        execute(Request): Response
    }

    class UseCase<<Domain>> #LightPink{
        doSomething()
        doSomethingElse()
    }
}

'Synonyms -- CommandVector
LaxComparator .> Synonyms
Synonyms <. Regression
Rule --+ UserVar
UserVar +-- Actions
'CommandVector --> Handler
'Handler ..> Request
'Handler ..> Response
UseCase <- Handler
State *- CommandVector

'mutability - Session #White
'mutability -- cmdComparators #White
Session -- BuisnessLogic #White
'dto - mutability

Request <.. Handler
Response <.. Handler

Handler ..> CommandVector
CommandVector -- Synonyms

'cmdComparators -- mutability #White

@enduml